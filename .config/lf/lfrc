## https://pkg.go.dev/github.com/gokcehan/lf

# Ctpv file preview

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id


# Settings

set icons
set ratios 3:5:6
set findlen 2


# Remaps

map x trash 
map X delete
map o mark-load
map O mark-save
map k mark-remove


# Custom shortcuts

map g fzf
map f fzf_find
map c fzf_config
map e ${{nvim $fx}}
map E extract
map n ${{nautilus . &}}
map m push $mkdir<space>
map M mkdir_with_selection
map P ${{python $f}}
map t push $touch<space>
map a &dragon-drop -x -a $fx
map A $dragon-drop -x -t | xargs -I {} mv {} ./
map R rename_numbers
map w extract_audio
map Z zip

cmd open ${{
    case $f in
    	*.txt|*.conf|*.srt|*.ass|*.lua|*.md|*.css|.json) nvim $fx;;
		*.png|*.jpg|*.jpeg|*.ppm|*.gif) imv $fx;;
    	*.htm*) setsid -f firefox $fx;;
		*.pdf) setsid -f evince $fx;;
    	*) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}


# Default config

set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
map <enter> shell


# Commands : navigation

cmd fzf ${{
    res="$(find ~ -maxdepth 5 -not -path '*/\.*' | fzf -i --reverse)"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}

cmd fzf_find ${{
    res="$(find . -maxdepth 1 | fzf -i --reverse)"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}

cmd fzf_config ${{
    res="$(find ~/.config -maxdepth 4 | fzf -i --reverse)"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}


# Commands : file manipulation

cmd trash ${{
    set -f
    mkdir -p ~/.trash
    mv -- $fx ~/.trash
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd mkdir_with_selection ${{
  set -f
  printf "Directory name: "
  read newd
  mkdir -- "$newd"
  mv -- $fx "$newd"
}}

cmd rename_numbers ${{
	for file in $fx; do
    	if [ -f "$file" ]; then
        	new_name=$(echo "$file" | sed 's/.*\///;s/[^0-9]*\([0-9]\+\).*/\1/')
        	mv "$file" "${new_name}.${file##*.}"
    	fi
	done
}}


# Commands : editing

cmd extract_audio ${{
	printf "\nAudio track index: "
	read index

	if ! command -v ffmpeg &> /dev/null; then
    	echo "ffmpeg is not installed."
    	exit 1
	fi

	for file in $fx; do
    	if [ -r "$file" ]; then
        	ffmpeg -hide_banner -loglevel warning -i "$file" -map 0:a:$index -vn -acodec copy "${file%.mkv}.aac"
    	fi
	done
}}

